---
import { Image } from "astro:assets";

import imagen from "@/assets/img1.jpeg";
import imagen2 from "@/assets/img2.jpeg";
import imagen3 from "@/assets/img3.jpeg";
import imagen4 from "@/assets/img4.jpeg";
import imagen5 from "@/assets/img5.jpeg";
import imagen6 from "@/assets/img6.jpeg";
import imagen7 from "@/assets/img7.jpeg";
import imagen8 from "@/assets/img8.jpeg";
import imagen9 from "@/assets/img9.jpeg";
import imagen10 from "@/assets/img10.jpeg";
import imagen11 from "@/assets/img11.jpeg";
---

<main class="py-10 relative max-w-5xl m-auto">
  <h2 class="text-4xl text-center font-bold text-white mb-6">
    Nuestras Instalaciones
  </h2>

  <!-- Botones -->
  <button
    id="arrow-left"
    class="absolute left-4 top-1/2 -translate-y-1/2 z-10 bg-white/80 hover:bg-white text-lightgreen rounded-full p-2 shadow-md transition hidden md:block"
    aria-label="Izquierda"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
    </svg>
  </button>

  <button
    id="arrow-right"
    class="absolute right-4 top-1/2 -translate-y-1/2 z-10 bg-white/80 hover:bg-white text-lightgreen rounded-full p-2 shadow-md transition hidden md:block"
    aria-label="Derecha"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
    </svg>
  </button>

  <!-- Carrusel -->
  <section id="carousel" class="p-10 flex flex-nowrap overflow-x-auto gap-5 m-auto md:max-w-6xl scroll-smooth [&_img]:w-80 [&_img]:rounded-md [&_img]:shadow-black [&_img]:shadow-md">
    <img src={imagen2.src} />
    <img src={imagen3.src} />
    <img src={imagen4.src} />
    <img src={imagen5.src} />
    <img src={imagen6.src} />
    <img src={imagen7.src} />
    <img src={imagen8.src} />
    <img src={imagen9.src} />
    <img src={imagen10.src} />
    <img src={imagen11.src} />
    <!-- agrega las demás imágenes aquí -->
  </section>

  <!-- Puntos indicadores (opcional) -->
  <div id="indicators" class="flex justify-center gap-2 mt-4 md:hidden"></div>
</main>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const carousel : any = document.getElementById('carousel');
    const leftBtn : any = document.getElementById('arrow-left');
    const rightBtn : any = document.getElementById('arrow-right');

    const scrollAmount = 320 + 20; // imagen + gap

    leftBtn.addEventListener('click', () => {
      carousel.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
    });

    rightBtn.addEventListener('click', () => {
      carousel.scrollBy({ left: scrollAmount, behavior: 'smooth' });
    });
  });
</script>
<style>
  #carousel::-webkit-scrollbar {
    display: none;
  }
  #carousel {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  section {
    animation: reveal ease-in-out both;
    animation-timeline: view();
    animation-range: entry 0% cover 20%;
  }

  @keyframes reveal {
    from {
      opacity: 0;
      translate: 0 100px;
    }
    to {
      opacity: 1;
      translate: 0 0;
    }
  }
</style>
<script>
  const carousel : any = document.getElementById('carousel');
  const leftBtn : any = document.getElementById('arrow-left');
  const rightBtn : any = document.getElementById('arrow-right');
  const indicators : any = document.getElementById('indicators');

  const scrollAmount = carousel.offsetWidth * 0.8;
  const totalItems = carousel.children.length;

  // Crear puntos
  for (let i = 0; i < totalItems; i++) {
    const dot = document.createElement('button');
    dot.className =
      'w-3 h-3 rounded-full bg-gray-300 hover:bg-white focus:outline-none';
    indicators.appendChild(dot);
  }

  const updateActiveDot = () => {
    const scrollLeft = carousel.scrollLeft;
    const itemWidth = carousel.children[0].offsetWidth + 16; // 16 = gap
    const index = Math.round(scrollLeft / itemWidth);

    Array.from(indicators.children).forEach((dot, i) => {
      dot.classList.toggle('bg-lightgreen', i === index);
      dot.classList.toggle('bg-gray-300', i !== index);
    });
  };

  rightBtn.addEventListener('click', () => {
    carousel.scrollBy({ left: scrollAmount, behavior: 'smooth' });
  });

  leftBtn.addEventListener('click', () => {
    carousel.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
  });

  indicators.childNodes.forEach((dot : any, index : any) => {
    dot.addEventListener('click', () => {
      const itemWidth = carousel.children[0].offsetWidth + 16;
      carousel.scrollTo({ left: index * itemWidth, behavior: 'smooth' });
    });
  });

  carousel.addEventListener('scroll', updateActiveDot);
  window.addEventListener('resize', () => updateActiveDot());
  updateActiveDot();
</script>
